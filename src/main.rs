use ethers_signers::{coins_bip39::English, MnemonicBuilder};
use num_cpus;
use rand;
use std::collections::HashMap;
use std::time;
use tokio::sync::mpsc;

#[derive(Debug)]
struct Wallet {
    address: String,
    balance: Option<String>,
}

#[derive(Debug)]
struct Message {
    count: Option<u8>,
    wallet: Option<Wallet>,
}

fn get_random_wallet() -> Wallet {
    let mnemonic = MnemonicBuilder::<English>::default()
        .word_count(12)
        .build_random(&mut rand::thread_rng())
        .unwrap();

    let address = hexlify_bytes(mnemonic.address.as_bytes());

    Wallet {
        address,
        balance: None,
    }
}

#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    let (tx, mut rx) = mpsc::channel::<Message>(32);

    for _ in 0..num_cpus::get() / 2 {
        let tx_copy = tx.clone();

        tokio::spawn(async move {
            // let mut count = 0;
            loop {
                let wallet = get_random_wallet();
                // count += 1;
                // if count % 50 == 0 {
                //     println!("{}", wallet.address.to_string());
                //     tx_copy
                //         .send(Message {
                //             count: Some(count),
                //             wallet: None,
                //         })
                //         .await
                //         .unwrap();
                // }

                tx_copy
                    .send(Message {
                        count: None,
                        wallet: Some(Wallet {
                            address: wallet.address,
                            balance: None,
                        }),
                    })
                    .await
                    .unwrap();
            }
        });
    }

    let mut count: i64 = 0;
    let start_date = time::Instant::now();
    let mut api_keys = ApiKeys::new();

    while let Some(message) = rx.recv().await {
        // if let Some(message_count) = message.count {

        if let Some(message_count) = message.count {
            count += message_count as i64;
            if count % 100 == 0 {
                println!("Scanned {} wallets on Etherscan...", count);
                let elapsed = start_date.elapsed().as_secs();
                let speed = count as f64 / elapsed as f64 * 60.0;
                println!("Average speed: {:.0} wallets / min.", speed);
            }
        }

        if let Some(wallet) = message.wallet {
            if wallet.balance.is_none() {
                let tx_copy = tx.clone();
                let api_key = api_keys.get_next();
                tokio::spawn(async move {
                    let url = get_etherscan_api(&wallet.address, &api_key);

                    let response = reqwest::get(url)
                        .await
                        .unwrap()
                        .json::<HashMap<String, String>>()
                        .await
                        .unwrap();

                    let balance = response.get("result").unwrap().clone();

                    tx_copy
                        .send(Message {
                            count: Some(1),
                            wallet: Some(Wallet {
                                address: wallet.address,
                                balance: Some(balance),
                            }),
                        })
                        .await
                        .unwrap();
                });
            }
        }
    }

    // handle.join().unwrap().await;
    Ok(())
}

const HEX_CHARACTERS: [char; 16] = [
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f',
];

fn hexlify_bytes(bytes: &[u8]) -> String {
    let mut result = String::from("0x");

    for i in 0..bytes.len() {
        let v = &bytes[i];

        let first_idx = (v & 0xf0) >> 4;
        result.push(HEX_CHARACTERS[first_idx as usize]);

        let second_idx = v & 0x0f;
        result.push(HEX_CHARACTERS[second_idx as usize]);
    }

    result
}

fn get_etherscan_api(address: &str, api_key: &str) -> String {
    format!("https://api.etherscan.io/api?module=account&action=balance&address={address}&tag=latest&apikey={api_key}",
    address = address, api_key = api_key)
}

struct ApiKeys {
    cur_index: usize,
}

impl ApiKeys {
    fn new() -> Self {
        ApiKeys { cur_index: 0 }
    }
    fn get_next(&mut self) -> String {
        self.cur_index += 1;
        if self.cur_index >= API_KEYS.len() {
            self.cur_index = 0;
        }
        return API_KEYS[self.cur_index].to_string();
    }
}

const API_KEYS: [&str; 361] = [
    "TR9X5M11KE3455C7AN9BF97253AU6UBPRU",
    "2G46GM4YG419ACVWNQ3VRCSWB41VDPYG6Z",
    "XYIBIDDWC3XXT2S13QUF4ZYWDUEIUAGKA9",
    "HUMDIKMJQUZ2QK3AJFQN1I68J2RK74BY98",
    "R6JUVKJXBRK8FRUMCCYXRRGDJFUI2Y48H8",
    "D4ZU2TEKS7GF241NTU4SAPTAVJQH1XVNPB",
    "Y2EEJTE1BW5GKQZ5P57DKWD8XJ8AWRJJWD",
    "SR4ECGA64TEKEF6DSDW58G4VP7I6A2RA1B",
    "Q4NHAU9658WYAV4Y7FSI7YEWB6EAXE7HH3",
    "XH7J7X7XXYX3S156JNN4SMCNYMUUZCTYXQ",
    "37U216B1A1BFHJHH6X4N6TUKJCEWMZC7M9",
    "SZ8CFM4BWGSAT6ZQ1J46K8UM722U1ERTYW",
    "XZ7D4RUK74GVYBHK9VVT5N3E17RZG49TQZ",
    "21NZXDIK79PX2II3V1VUCF5PMRUFDS3ZKI",
    "TVVQ4C36GNUK3E5UR29WUVX17SI4CC5CBG",
    "KAWTUUYTSZR18MBXDR32A8QJE7GFEI9NAT",
    "SWMMR844A7TF8YTGU9F64U4CSJXI4AWMNK",
    "4FY1ZQN3JW68WJBA1VCIDD2PUM3A5VUVHZ",
    "KIRNJNQSW9I67I5PCM4AURJ5CP6S4TQITE",
    "6PZE5D698YKVA2FXDHF63VFVYJ19T19VG2",
    "7KYXTTH9KFIJ4K7TVIBEJUDZ63P7PAK8W6",
    "6SKUXZNKGP5VQ18FPUW7XA9VZTGCE8I1RC",
    "1GIJ2AU5AEWSQPDNRKG394UINKG9BTRNF6",
    "48ST9JA94MBT5CRN4CRSSYKIT7VXG7PIX9",
    "TV524M6CMIM3XZ6SG4WHAW9GBZPRBEEQWF",
    "6AH5QQY6ZWC4XPSWC3CWWUCJN425F72EFD",
    "TF4URDNJC715VN1BNSH3PYRSZ3KUIIWADR",
    "KUR5GIX416DIMA31WC6U9DFKG9P4EFDU1X",
    "J8URCXGZ1X87R62RN4A9939H44M484KB4B",
    "I6QH4GZWW6F8SKRSR85A7G3IZGKZV1UQAD",
    "CPP4Z64PSH119PXHXTB8HI3BIGZB2YBVFB",
    "MHZ9NRSXHIMREJP2TRU4E9F59G3CUFYSVK",
    "7V5TR64UQGWZCX677KV84KZBBQV2Y1AKXQ",
    "NXJG13JBX551DE69R4QE11KUAYHIGXAVGD",
    "YVDMNQP6QVZY81362IU2MI3X8HTNX7ZJVD",
    "1G5CQPHTQ86JPDUZMQSJJ1TKDZR75KYFZ9",
    "BQZEHIE8P9CID7AWTXHM5HA55VW6M76I6P",
    "JXEQHGBP3QD4A6SF7YW9AYAXK3SITK1NQZ",
    "VJAXEFZRH9AF38GZWEAE7EH2RCQPVI2XXB",
    "R4JUP6MSHJZM7A8N4CMFXCVX2536J8ABZ5",
    "GAEDMW9D4VSS4F2CYGEVCNTXTPKCWMUHFW",
    "SR1FHXHGHQNI52WC6ENWERYAY4HVEBUCA8",
    "MDUQQU953XG5MDDZXEGPG8TA4XIZRI9BYU",
    "7ST772BMCM9WPVUVIA4GKUZT64DPN4IZK3",
    "F2BGXF43R4MGQIGJ8A3UE84BF8YY4UAUS7",
    "Q2K8QAPB85JEM3UYF7X3JKQSWDBAPESM4M",
    "9HUCB92GF3AZMDWNZ9HP5DPG4XYK6RUHTK",
    "TMNXMJ1VYNTKKVAZKYKCH38JE57S2WKAJI",
    "ZMW79AAZQ7VJWZWMSW1DVDT8MNJZABMW66",
    "DMC8HZBP2EFPYWC2ZMYBUETVUFPTCXX73R",
    "E6USYQDCT3SB9YMAVWYIRHPAIW8E7A43XP",
    "K3CBSG2GNJ5XCGTB94QGAPUDYPDKADXH3I",
    "4SMUZWHI1J1Z7G4XWPCNTVNI1PB8PNANXV",
    "C9QVSC96R3N7R89F4H27TJR2UJR5MN4TVS",
    "I361SRBRT9QQT95UQ6SFZ8VRCRYZQNAQED",
    "FEY66J8YAIBC8NAS4WCHFX6732SU6IACM4",
    "AI2H328AQ1ZAS95IWG9PHE4NFAPCE6SYJ5",
    "1ZGRBMD66ZF15TTY328MGI5QRGAINVTGXQ",
    "MD36MMWH2KVZZSEH84BSRCRATHBWIT7PKE",
    "SQ8E5EF3NHCSCZBB1QFRJUP1RSGFPA9D37",
    "QVZ44WC17WGMXBS4176I2VSYD15RYITV7M",
    "5YNVGF8AHGVCU8J8GX9ZQB9RJFH17ITNW5",
    "H1T45N2IQE8ZRFV9UQDATKH6U9VKSYGPID",
    "N41K6IZQK177MU9Z4PJW9TVHRM63XEK2WH",
    "1D4KIVSI8SHEQG33SYTYHWIJG5Z7CI5QZ5",
    "3U4IKIXJCFAQEXTZMH7SS9EZ4CICZKBV4W",
    "8I99N21IXJ5CWB5FMXNJ78G5S4VFJ7G4RQ",
    "DT4MRKS7BHZT43W899B2B3SW11JUUYTZZA",
    "N1B9ZANU6PG2GJTFXDKUXDX6JTWG1UE4GS",
    "92GMZQNXSFXGYKAZ8DAZFQPCH8698IITI2",
    "EA431FG87UK2HAZ7U5FV2DEX55JPIPDJUC",
    "5UU9ZWXPBH6CPX2HU82CCYTCUP4ZSW4RMU",
    "IWD3NPZXQ997P78R6MQ5XCEVN25391GJVM",
    "666WN8543G6H1THYWQ7S6IZZIJ7HA12IT5",
    "817BNRNEJDTWKUVJI5QXA7FMTGB7PI77MC",
    "AVXXJC97SBCXUMP37W29JK4Y6VGK2EIMF2",
    "PASNK5RJWAJA324EPC281PCZP5IR7PRGVF",
    "KTZ4N27KHSYG2Y99RCYRD8P4FHR5WMNJA1",
    "GIME2K1M1X7C42IYHKX2IK9MQGYRCTFU8S",
    "NVZPW3R64C3MINKDYRNEDM6A51CWFR4HQ9",
    "2V5CEZSF52IHHDDVHX82UZIPWYHEXNIRK3",
    "7CRTPTUH74YSUUNMKRT22ZC8XNSTG96GUE",
    "MK3KGC1TBP6NFFP9AP3F4F8JFSCV1D4KIV",
    "RKS7BHZT43W899B2B3SW11JUUYTZZACDAM",
    "8TDMKE1PS3IAFKDIH768KAW9Z4PW3T5783",
    "VJANNCAQN6BS7E9ZSJKHI1N9MFNWTE3DFD",
    "VDD8M366IXHNZQ17ZA8D33SBRB4ZBDGKMM",
    "ZWXPBH6CPX2HU82CCYTCUP4ZSW4RMUCM7Y",
    "32XIX6AWA5SZB5E3X8SHBGVNB2S962MEW7",
    "WGHT3SDBI4ZZ2M7I1N66B31MT3FMQVIJXA",
    "9WDFH9GYQUCRJVHIEGGTG8GXM29MRPN14T",
    "EIK6P6BE44WAXEDITWDBNKG9AJ2HT8XDS6",
    "BRHFC2MNE45J8RWWHJK41EVAG3PN7NU3BB",
    "9AQCWHCATZF3KMVZ7YX2BJRRAHJQDEKWKW",
    "T6M3I4Y3FDADVZVAIP81ZFU9E3ZWNSDWDW",
    "NVTAMX5J34DIP5D7FBPEPC7SWIMTS852G2",
    "V9F6Y8JKP2VM3S111758EJ75KBS7IV87YW",
    "E6EGJVU73ZNCKMMJKFKZ2EAWUVHIHRGSYC",
    "Z6JGXS3M1PGIUK74SC3WBSX8W2I5A1FE7S",
    "JJSY16UAN2PCB3B5HN1T92BNW4QFXZT9D9",
    "1835DJ6HKF7MRP6ZX8PF1CN6JRVPY5749D",
    "ABT3HI81656AFQTBMEIIWUFWE55M1NQ1EQ",
    "HDEAMAQU5GU44VH4P17VCK71BH7J7PZ6VP",
    "WG7GWG8C3CVDZGQTYU2ST18JVUMBSWFCM7",
    "BC7N2ZQ92S85HBR8K4KF1KHX9GJ47FSB6K",
    "GVIP8TYJB74QNXID4SUZXEK471SC2TR3WS",
    "HPPG8X9FUNWXMD26D4Q8U5GMB32TGFJREK",
    "P6EKR4H4BSW2UDCG2KSTFP2YKVYGAZ5YW6",
    "NAQE1G2NT191UDB7D2GCE2A1GS7459ICUA",
    "NW37N899MJ8X91X7JXY2WRE96244S7VKYG",
    "VKUZVCTZ7QTKDHZQ6FQY7XFT1K45GEPNZS",
    "YZXGC8IWDSKMW91JKER1JCPWXE85KZ57HG",
    "6QB555X9I5EUXJJIDZ1X5WVTAIFD996K3Z",
    "W4ZAFYVPZKIPFDD8XV5VDPHRCUVMAQACU3",
    "QH11D64Z5RGWD12KY6X8YG3F2KQ14BHM1I",
    "5F3YV8JU7Z6HKNVIVS8TZDBN9THADA3INH",
    "T3K8799PDJ5JI37WZQN27K95RRMUIFH52R",
    "H9SGJ51EIHNRWG9EU8MI6F1DSJ7SVSGM55",
    "8N6HZX3U7U3EZ64ASYB12SNJ8CMZSY26F4",
    "J5V3R48391SM26SQW5TGW3H9NRN3MWWAXP",
    "SUJ8X2Z6NNS282JQQ25VCFYG5P1DNKC79K",
    "FBUHSYDZTDH7ZQK3RCCRYMDNJTZJAK42GC",
    "DYIMBG3U8IPKUBUEXEQFD695DVQNPNUTH9",
    "KBXQ5D51WS1V6CSK1SKI2973SRH5U7RI5D",
    "IGVUXP8P6IDFMB9V2JDHPR3NWC8UXTQ3P4",
    "GCYB6HX7DDMPV7MER3YXE6UIC34HXS4CIX",
    "IZGAVUQ7BEHC45A99XK38HBI9ZYIB48NSY",
    "F179IRCD5SSDTMMK17WZHVVA3P8266DAD1",
    "BKUAHH4CA4SRFA32EJV9367XBDCK2445XA",
    "WSZ6J65TARTPMN4DII95FB65QSE6Z3Y2RG",
    "K7XSSXPUIUDGDDFJUIB42A49JQ2EIX32XN",
    "GNRPTAQ1MEF1WC9NZ9ZXW2UPBP3FBU9UFK",
    "VVCBXHC1E9H6SRU327DQYRH7MAVZ2NXZPY",
    "1X4S6RU4IRBEM199USXF4T7FYG6HREXGEW",
    "WUK19M8X39S4DG26XK2HNF2UR83N1HKFSB",
    "2FXWKDBDYVN67PA2X967ZDUSYUVVFRTU1G",
    "AGVR7VHUUKRD3UYS4D6E8KU6GRGGVTYNUG",
    "4MQ49BU77ME6R2U9SXU996XN37K7FPUZH1",
    "T1RGG2CX9HWTHNPK9M33Y8A2UZDQK92B78",
    "VHGA7MT3C2E7C4NIRV9UKIA2EE1GVVZ4XH",
    "GG1CYWJA9Q5IGW73MTA2QUBNK727JXUR8M",
    "S62I6MD51XZTNGHY1HIEUDAMXMUJP46BRR",
    "6ZAJ7VXRCMPVCG3ZNKV22U1NHYMDJ9VE7A",
    "AFPK1SH8NZB5NQ6CB3MZY6X7RTD9P1SGGW",
    "PIP9QCDP8W92PX2ND6EANDXRU5C75AN1AE",
    "2QB7BJ8I7MENHSJ47MXTM6KX96GWICPFZ5",
    "PZSSJAXWSWQQR8GXA7WCDF5TRDFXB55ADV",
    "QXQ4FN3U7ES225869CVD8SC47ART7YNRGZ",
    "F4WW1MPSJ1TX8JJ95262RHHRUAQ8319MFG",
    "IGX91UI3S14FNRHBGYZ9Y413I4HN9J94JJ",
    "GU1GUFCIRR84EVWC8Q7V15DW1I8XTW5MI5",
    "5UYA7CNHXDXU575YAP9HQ5RSA3BQTW7Y6I",
    "P76USGNXH4QP7MSXQJT6RH2WTMFM5S5RHK",
    "PR5E46BR6EA3M86WUSR2E24FRKBTYT95UR",
    "I3EKP3M93KNNJDJ2B9DFNNJ7YW8KINUG71",
    "W4BADSGFDWD3ZRQPN48YY4QNJUS6HWWSIM",
    "QQDNPPFZTK9ISHWN5JN1MPKJ82CZC3DHB8",
    "HASCIUM9I46HMQ5VQ6AKHY2IDXD1X5P65X",
    "6MZ96X31I1RXM7P7M6MQVZC139JFP747QN",
    "531NGV5VX9M1QBJRFEUBYUENIRR4FYJPEE",
    "CIJE3TJRY5R5KKGDYNQGC2HQWFFN621IHV",
    "66NY791ESUMKXQAT44S6DSDRVCSZY6VKZG",
    "7G1XCTBUIM8ASGZ33GZCXSAA6GP9E4VBJI",
    "PKGBJGRADF5ATCECVP68W538MRD57JUFBF",
    "BNSH1G4ISBIS88MKMFT7F9YAWMV4W5NR7J",
    "QI2V8NV98FK7ZVU5EH72G976CGD2HP1RMF",
    "RY91PCG52BE9P725VQBK4E9EYB1IMQZ5FM",
    "Y7EUUNRGIKK3PCMIG7K8E141TSEDDHBHF1",
    "J76MHE8XQF18QFFFVJVFR5XYTN4G3GU16W",
    "2ZKZBHCJER2C2YIMFYGN3AA6WGQX8AZJ1G",
    "R1JUN7CDU7RG32H42MJS9QK522KNSB9IG5",
    "YMWZFPYHB2B2S9Q276YBHXMKD8BNYZQPG9",
    "MZUJBM59VJ5JJS1Z16S3YR962YI4CYTWQT",
    "BBUYBXW42SE2JA8HYCQU83N344MJ4EREAZ",
    "SEKWEB2EVF3QDV8NQ4W78T27GZXC7697CX",
    "FFDPHEV5G5DUMUZYGA5ZEIIZH9DV3FUAE1",
    "6XBT7EKC9A6QTQCNET1KBAMQFZUYUSX5FV",
    "FI8R2PZYUDIRAPEV4M5K9QS3DMHCKIXH2I",
    "3P5X3WMDPNVSNSFM84QMFKMPQEF46GT4MI",
    "A1T8WHZJW3UU68QCQN1Z354Q38VAG1H36V",
    "DNQDS1YBAAX5ED4PYYHHGAQAJFAVDV48YQ",
    "9PMAZEUR6X5UH8X355XKW54HERBFGH4RV2",
    "MC94C72R3W9YGV7V5IRJ9EU932BZM7CFHR",
    "6A2WK1XIX2EXVWUVTWHZ2WFTZEF4NNSIEM",
    "FN6AI9HX4WG1IZMU2M7YFPYSGW1J461N3E",
    "ADTZUK8UTDS4XD8D4QITZ4459FR8C1ZA13",
    "BRBD6I56VRQJU7M683X89XFF2TMWBADXSN",
    "17D2XFR76PQB617FAEWYJIFGYA457Z95B9",
    "ED27RPWRU5BPB6P65ABC32RFCFFF1KUHMB",
    "YEYWCVZZB39IC7NCE1GSXPPGI22G9H2S2E",
    "VKR6345UMNBAJDK5AJPF5P3BHER36MVBS9",
    "4GKGZY3PQQBVM1TVUSYG8KGJ5D7X4XRXHZ",
    "EPZPMQ3EXKZPEEZGX9R97RITHR34PS8U1Q",
    "95YJBQ2XASCISHKA3VD99IBAXR1XIDCXGN",
    "WP5Z34NWE49P8IZ28AZIJ198QS8X4W7NJR",
    "XNSCM43KZJ66CNBT7WJW7357R2265PKKIU",
    "ANPFZZXZK4KDXP2VRU18HUQF2GS11ZTR3P",
    "HWGMPVUSTVFEUFQKRCTX6YIVIAM98EMJ31",
    "UD9HNXB8UI5T5I74GV52V2H5ISS59NAJGT",
    "2I9WES134UEAX2UU56DCGHFRY2V532ZFSF",
    "33DZTQRIAQSRWYQ28YEU1H3M9RTEDTQBB4",
    "GBHPY2D3X7WWI4S1N65S4HMJXX6J1VUMPR",
    "U486SNIJXNC6MEU3D8T3QPQKD71HK128PE",
    "Q8IUTSY3MICIYCJJXGXHW7KHUNMPAM62I7",
    "N9I2II2AG1I8AZVV6D3KG52UAI9MSVURRN",
    "G5SMR4YDCK2I1NCKFYUDE8WKG6UR4N73HD",
    "RDR87B69VHJJ4H7RID8WT25ENRXXN624NN",
    "W8V1GDQF5VTX4SPNSEMBXBTTPN5QM2TIPK",
    "66ZN1N5S63HQAF6TNJXJSHR37QGYURU4T8",
    "F45WZR56ZZPZ8BBJ9T3PMRQDXDWZVGJK66",
    "KATFS25T8FSQDKD23YE9H671ZM5P8MYGYX",
    "99JI4PN5P295EK5DE3AIV4GAJ5XZQSQY2V",
    "M9SPHFHTFVP6Q4W91KYZAR3GG1FHWSZCWR",
    "H54GPHV8T1YE3MQ846EJW4C1EBD297JQGI",
    "RCPZGG2RWHNCDXBB7CGNEDN4T8E9BW3ZI9",
    "B99KJXHXWURKKT3UWWVBZK2W84MS29KY8P",
    "FNP4BPN3HKHET5DRGHU97G2EA86ZXUY4J5",
    "7HWWEDUCTH6E8RUQU4V3FUS5EWSCITIQ37",
    "7GCCYM6E9GJA83WHUQQ121SY28B8ZGRFMK",
    "S1WZZSVTE94XBX9CIG1DMXFDSGYC7XS7GN",
    "8EC8NT81WIBCNKW6PVND1U21A2I84RCFPX",
    "YF4Y1RU34JZ2J1TT1DRS8R4D4JIEZW6C7P",
    "G5YMC4TZZ1H1CU2A1ATS2QQBTI6U1SX1E9",
    "A1NQRRFYMBKXR1D2F1VSIN3Q74CHHRNUNR",
    "5YJT9SVKBP6AIUY4RJ2EKS7SWYXIP6M1H8",
    "GFHUVKKEJGN71V2ZSVRFAETJ553KBEU2CV",
    "S8IM55HB8GM281GSZB7M5C95EYI91Z31GU",
    "WVDPFWJJN16AJ78Y4G51C168RBJYBYY6HM",
    "4ZXZDPHAQSHIRCCUPSY8MGJ4IH5YQI2IW5",
    "8SRVVCUE855BMJW4RTT9K96XE42FSBAWEK",
    "DHWJBFASKBMVCQQ8KIJPECZB1DV9GFCF6T",
    "ABSXREZW1984J4GKUBEECC9PYEE5Y53KQ9",
    "YVF7X16ICU4IUXS5XSNJKT8BD5HSS2Q26X",
    "16WATGTKRU1KJQ1RJBRXUKY4MD818VC5WD",
    "S5148JPKKJUPKB9KCJ4E4G5BSRGMRR2YN5",
    "FQN6RTYFCFYXHUVMN6K8VR83Y565NR12SA",
    "HEMDX7P212EDCG5CGNZIV2A4MG3DUEGEC5",
    "IVXY98TE51ANB563PY2GX73F6JPAHKPHIV",
    "VJG53U6A3WZ959XDGF2M4KEP7ZSQUXIT9S",
    "2HQI1AMV255RJK56ZGH8IN7YNY3UHWYYU8",
    "FV2Z8RRKZCP2PBD3GCPI1BEDZ191XKS239",
    "I3AWWK7UTT1WYYYRBE3J1RMWNJWJM6ZZ1S",
    "D3CQZKB12SCNBY9RR5YTMKUQ58V8XGX7G1",
    "7EWUX69UAI68H9UVWY27TXQXWDE4BUWQFS",
    "IGWV4T2J49CX518HWI6D2ZWQUQV8CK2WMC",
    "J4V637N84MBR7HQSUMKXXD195CA7HI7K4S",
    "F7KXTWTX3A4QDBX1FFVW396NECRUA83E3W",
    "S193MKKJJ7MI9T4SKXRBAZFPHQKEIKBJQD",
    "2ZXNT9X18MMKYBK2DC7BWMXU9P15CK35IG",
    "1JFG8BRSBWIRECV6568HFZDH6DWHW3IX6W",
    "T3EYPP8U8TB3AS2DPA9VQKE7VCCEYF4ZXK",
    "MHICP1G9MYNF4FKW5RNNAU9SVGY4E42BKH",
    "9JWC4TQE8CQ7HDY9PQQAJSS86CIB781DHA",
    "3QV39N47GES4SK2DACZ2WIU162C9JU2IXT",
    "89WH1ZNR4B22IFS8QJC4Y3YQUAR9DU9M94",
    "NG4PFMECCBEQEKV1SZDPII9HFJET4HC39A",
    "ITQVXGBBP7TDCJDD6SPMYSSYMQVMCDTM8Y",
    "8NCRZCNZ9W6VV9NTCK38F5RNMCR6W4D34E",
    "K62DQPTC61EJPZWAK3GKCAPNCYP36D2PNN",
    "B6V268GT9AJ5CWDMFAPVFEBMY9V1P3F6Z4",
    "UU3MRK2UCVT32DWUJHZ16V43FYZIZ4KP8J",
    "5EFH41SWGNRBYZ8UNGQDSGZRHZHND2EJ9Z",
    "SWFMSKKW4KBD3RSIU9WJTT79BRPWAJ7EQ7",
    "F9BWTE6UXHJVBM821XESH4JG74DNDXBSMZ",
    "TRTGYIPSU8V8FQTA8G1U55BH8ARCTSFII4",
    "GVMQECB48W2QTGT1R2SCDWU4S53UYXKVBZ",
    "JNM3BSED64BTWUJH47G5R2ZUE8VIWDF2ND",
    "SXYT1KPHS4S5KPW8UD1ZC8BTKI7IS2ERHB",
    "62G2A7ZUSEU7AMQ7WNNFNWMGJIEYVBKIX2",
    "3ZVV1824MQVDJNYK7T7KRHPJMWVUJ652YI",
    "6YTGZK87AJXHYX7T2T59S34UTHEPWUDP4C",
    "YSYC96W2G6MX3PG4MJFJ7C4SA2J39CQIR8",
    "79D9S6A26FB8ET8KSG2CN8N39IPEXI3IQ4",
    "WQC6ZENQVBP7ZID75FVQ1QXZ833T1GZQ58",
    "B19N35U1XACNMB86VCVYVH6MTX73BRIKE9",
    "4CD9TU3DNKFK68TD1RHT7XVM6S35M7Z94S",
    "MKWNUPB19538DRJFUJBMJPQ9G3M7D35U4M",
    "3Z3XTTFV26F6IIN7NIVVINBHF3D5ZR78C9",
    "4NAPY74W8W9P8FG346Y4D4T3P2E5AAQEDI",
    "JCT9WEVGVE5N8UXA4SACQHRH7NP2MV5G9H",
    "GIVTE18X68Q1FM4BSY3XVWTEKBTGBQYJ8H",
    "EI24THM66G7JGD2PMFUTMBV6SNW3R1QT3G",
    "4B4QT4DCT9KFQRQ11VPJ6W5T41R21R7QMW",
    "EQR6XY85W6J6J51PTDN6FWJVZMETPC47VU",
    "39NNA5H5CR5N6GGHCCTINXMSR9HTV5P3R4",
    "HSHGKZQFFJAKF7D41F3633HQ2K5MXETA97",
    "826FSMNSYDGCECJRCVH77HFSUZRI1E4C9T",
    "8JHCNCYUSB5RGH74943RUA2YT6CU3PIRE6",
    "I19IE8YN964ARFDZW54ZI564J5W7WEGWGC",
    "5MBUSRYC1S7GUBIZ5784BKK8BPR31E1JR7",
    "7MCS4MTE74R3NSQXFR89VQYQ8QVFR18DBE",
    "NS4X5Z8X8TAYCFFHN98JZKND66M28FTJKU",
    "A8TFKSH2WWW57GASSXPXXQUE67S2NS264B",
    "MF1PZN3PW8QR9Q9R4MWERG3NIAAYN7WXUQ",
    "7H42C7SZK8KG77JI15HBJDZSMQRM7FWWCE",
    "A2FK4ZQPG5IE6FV3TC42FQP9EEZZ2ID96I",
    "26ZJ1PV9HKBG2WDKAR39CPQS5P5G2JP2S4",
    "DH87YB8W1IJCNM8AZKQKKR9E3D12ANZ3Y6",
    "QTCJEPB9F6MTDPSHC2ZTXFTV7A46RKV8FE",
    "QTCJEPB9F6MTDPSHC2ZTXFTV7A46RKV8FE",
    "XHHJDWI3ZB6ZGP7CWY1QZQ5YJQKZYFY869",
    "VJQNSD4PY8EGCQK87HI112888KAGZ9BEAX",
    "92K2XS448ICQ2EBTCBXVYZCCPGDD6X6VPH",
    "D4EJKHZJCCMVKZVEUG8BIUYNMBKZPDIS7U",
    "4KYGD8NN9INN2HJDMHDKEJ6NW7KSRWMZ5R",
    "XAFP5WZAVMXA2Q8BI168BYHTB6EAQ61TA5",
    "A7YRHHP4ZPBX89A1B32955IQA5YNU5H3BC",
    "VA34SZCX9ADP112WAI5T7UMUASPKPQ54D9",
    "8C3WNA8JAAXV7S7FEFZV134RPFGNCPUQ1D",
    "KJHNBNHJRFSXJSZ7MQ1IV2HRM6Z59HE8WF",
    "RG83EC545F68FH5TDKHQH8HAM4SPCMPIFV",
    "9MY1U7I5QCGYNRBHJ5CVQ3CP92RCQV819K",
    "UWNP4GWJ7XPPET5MKIBP5GVHDKBYA2RQGM",
    "CQXMM4KS5SUV674K6Q9SUJ6X3AV18Y36YU",
    "4GYB8VK376Z4HRMT9KBN5M6MHIUDCFBKP9",
    "H73CZKP968TX94679EEGPPV8W7GXKXMHE7",
    "U9PEJ44G44ZHEGIEKIGF89RUPR16TG6642",
    "WKRRT12QCW8WHGQGKV2HH57NS2EHP7GDVG",
    "BMD7YIQG7BU3PUK4I1M492A6S1EUVAF9XI",
    "NSRFR5ME6UXX1MH8SDVC8XC5XK96TIWTRX",
    "VCP2KUQDC3J9NEHJVUNTGCAMG6QEIPTJ4U",
    "TPWGM2XQJT7HK4VTZT4S3MNRIRIU84DR2X",
    "MWB3UTS4XVA1JINCY3AHP6R87U3Y4Q9DKK",
    "P8RUPRWZEE88VTN4SAS9JH6X9RKUMH69H2",
    "NACEUQK9UUGZ4KV91RPEZBXJ81ZTFWGEUS",
    "ARAJJWHTHVC857YU7UMAIYGRCD4F475KMB",
    "SS3DSIEJDQIFT8P9BRUKTJPDMPRS8NU4KQ",
    "KB52Y53TTR9WSZ3TNZIET4DKEKCMBSHV94",
    "FTIDUH9TYG1GWX47T74RWA8QTKAGACHQZY",
    "YAJD61FDQH3JKCIRUPBTTQ5EJHXRD6RXMX",
    "5TSHZSAITCGY19KVEQ2IADWWNXGRJH8PPU",
    "NT344USNU7DJVVWI3PYC6PMKQXJZ5NFE3G",
    "A82PR9EKC5NU41K26TTWFRWHWDCEBFHMQR",
    "754I2YWQ27FCH53VKAJ8KCNWN5PFUGHEDE",
    "RJVC9HDUR3P1ZBC5DE7QF3V8RB8M1PMZKY",
    "1SKSQMGE135WH74Q5WDKJ535CVAG3ZPZ7B",
    "KWJKT4QTHYF1DS712RN4SDCAHTMYFT3PGI",
    "F2CXWTCAZNWVQSY4ZENF1ZY7Q72HTJJ5YX",
    "6UNQITV7XISGJZYH7MWBAXSACBKGFHZYJB",
    "BB7NMZKAT18CJVHCK2HFHRNXYWN615GI1R",
    "T6E2AYPB381XXHKS64CVPB93B25WA6WJ6G",
    "7V2RCK915Y6JVRTIF8R3NGXG6WBXXEIFSZ",
    "V7NMQ7YV8AE3NCXH4JE1EBQKWMQBVDJS3A",
    "SJYI3RCRID3WWVZMYAJD61FDQH3JKCIRUP",
    "EWQ6WZFFZ12FCXG15TSHZSAITCGY19KVEQ",
    "EWQ6WZFFZ12FCXG15TSHZSAITCGY19KVEQ",
    "FRT5JFJ3MKHQ9WCWN7J9HMY5AD2Z6QQZNK",
    "25IBC3EEVICJPJZS91RSTJD7RAT7484H94",
    "J5383KG9815I79TJZZ9QDUH8VV9EWKP2Z3",
    "JACYV7QPXHJZ7CICYIKUF5RF7EM5VRVPZS",
    "5V4N3PP1QSYBPK43G2E9FDZ9TRH2Q28VQJ",
    "SM6DB7FR9U6H66Y5ES3114EU34SIQXP273",
    "TI36UR1N5MX5ZZYAJ6KKKNQ11MQ9I14DRQ",
    "6AG65GSZNI6FJ6R1MD8CU6EISKJV29CYKP",
    "RT8PCA8SAHN22CHDFYTE7RBCG4EYCUNNCT",
    "EI9JRUXK5KTX1YQGT9WM3IRUY1EC5D5D61",
    "XNIARU6DZ2C5E15DUWIIATCY9KBW1VMX9V",
    "3D3TVM6Y9PGQ7CZEPSJNXD44F4F8BEZCVM",
    "2Z9H7AM4F7BWKZHU2DB46QFXJNQTNAGWP6",
    "FX2B65B3T3SETNRA65M9YJ7G5V4N3PP1QS",
    "7QP6RVJVYAYE3JY2PNSUNTYZTI36UR1N5M",
];
